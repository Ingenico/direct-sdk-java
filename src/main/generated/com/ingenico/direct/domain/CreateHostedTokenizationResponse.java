/*
 * This class was auto-generated from the API references found at
 * https://support.direct.ingenico.com/documentation/api/reference/index.html
 */
package com.ingenico.direct.domain;

import java.util.List;

public class CreateHostedTokenizationResponse {

	private String hostedTokenizationId = null;

	private List<String> invalidTokens = null;

	private String partialRedirectUrl = null;

	/**
	 * The ID of the Hosted Tokenization Session
	 */
	public String getHostedTokenizationId() {
		return hostedTokenizationId;
	}

	/**
	 * The ID of the Hosted Tokenization Session
	 */
	public void setHostedTokenizationId(String value) {
		this.hostedTokenizationId = value;
	}

	/**
	 * Tokens that are submitted in the request are validated. In case any of the tokens can't be used anymore they are returned in this array. You should most likely remove those tokens from your system.
	 */
	public List<String> getInvalidTokens() {
		return invalidTokens;
	}

	/**
	 * Tokens that are submitted in the request are validated. In case any of the tokens can't be used anymore they are returned in this array. You should most likely remove those tokens from your system.
	 */
	public void setInvalidTokens(List<String> value) {
		this.invalidTokens = value;
	}

	/**
	 * The partial URL as generated by our system. You will need to add the protocol and the relevant subdomain to this URL, before redirecting your customer to this URL. A special 'payment' subdomain will always work so you can always add 'https://payment.' at the beginning of this response value to view your hosted pages.
	 */
	public String getPartialRedirectUrl() {
		return partialRedirectUrl;
	}

	/**
	 * The partial URL as generated by our system. You will need to add the protocol and the relevant subdomain to this URL, before redirecting your customer to this URL. A special 'payment' subdomain will always work so you can always add 'https://payment.' at the beginning of this response value to view your hosted pages.
	 */
	public void setPartialRedirectUrl(String value) {
		this.partialRedirectUrl = value;
	}
}
